{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","list","clearList","setIsEditting","deleteItem","editItem","className","map","item","key","id","title","type","onClick","Alert","msg","removeAlert","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditting","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","newList","filter","currentItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b78e729.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\nconst List = ({ list, setIsEditting, clearList, deleteItem, editItem }) => {\r\n  return (\r\n    <div className='grocery-list'>\r\n      {list.map((item) =>\r\n        <article className='grocery-item' key={item.id}>\r\n          <p className=\"title\">{item.title}</p>\r\n          <div className=\"btn-container\">\r\n            <button type='button' className='edit-btn' onClick={() => editItem(item.id)}> <FaEdit /></button>\r\n            <button type='button' className='delete-btn' onClick={() => deleteItem(item.id)}><FaTrash /></button>\r\n\r\n          </div>\r\n        </article>\r\n      )\r\n      }\r\n      <button className=\"clear-btn\" onClick={() => clearList()}>Clear Items</button>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({ type, msg, removeAlert, list }) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000);\r\n    return () => clearTimeout(timeout)\r\n  }, [list])\r\n  return (\r\n    <p className={`alert alert-${type}`}>{msg}</p>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState, useEffect } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nfunction App() {\r\n  const getLocalStorage = () => {\r\n    let list = localStorage.getItem('list');\r\n    if (list) {\r\n      return JSON.parse(localStorage.getItem('list'))\r\n    }\r\n    else {\r\n      return []\r\n    }\r\n  }\r\n\r\n\r\n  const [name, setName] = useState('')\r\n  const [list, setList] = useState(getLocalStorage());\r\n  const [isEditting, setIsEditting] = useState(false);\r\n  const [editID, setEditID] = useState(null);\r\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' });\r\n\r\n\r\n\r\n  const deleteItem = (id) => {\r\n    showAlert(true, \"Item deleted\", \"danger\")\r\n    const newList = list.filter((item) => item.id !== id);\r\n    setList(newList);\r\n  }\r\n\r\n  const editItem = (id) => {\r\n    const currentItem = list.find((item) => item.id === id);\r\n    setIsEditting(true);\r\n    setEditID(id)\r\n    setName(currentItem.title)\r\n  }\r\n\r\n  const showAlert = (show = false, msg = '', type = '') => {\r\n    setAlert({ show, msg, type })\r\n  }\r\n\r\n  const clearList = () => {\r\n    showAlert(true, 'List has been cleared', 'danger')\r\n    setList([]);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      showAlert(true, 'empty value', 'danger');\r\n    }\r\n    else if (name && isEditting) {\r\n      // editting\r\n      showAlert(true, 'Item updated', 'success')\r\n      setList(\r\n        list.map((item) => {\r\n          if (item.id === editID) {\r\n            return { ...item, title: name }\r\n          }\r\n          return item\r\n        })\r\n      )\r\n      setIsEditting(false);\r\n      setName('')\r\n      setEditID(null)\r\n    }\r\n    else {\r\n      showAlert(true, 'Item added', 'success');\r\n      const newItem = { id: new Date().getTime().toString(), title: name }\r\n      setList([...list, newItem])\r\n      setName('');\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('list', JSON.stringify(list))\r\n  }, [list]);\r\n\r\n  return (\r\n    <section className=\"section-center\">\r\n      <form onSubmit={handleSubmit} className=\"grocery-form\">\r\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\r\n\r\n        <h3>Grocery List</h3>\r\n        <div className=\"form-control\">\r\n          <input type=\"text\" className='grocery' placeholder='e.g. Eggs' value={name} onChange={(e) => setName(e.target.value)} />\r\n          <button type=\"submit\" className='submit-btn' >{isEditting ? 'edit' : 'submit'}</button>\r\n        </div>\r\n      </form>\r\n      <div className=\"grocery-container\">\r\n        {list.length > 0 ? <List list={list} setIsEditting={setIsEditting} clearList={clearList} deleteItem={deleteItem} editItem={editItem} /> : null}\r\n      </div>\r\n    </section >\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}