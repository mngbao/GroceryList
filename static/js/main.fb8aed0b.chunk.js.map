{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","list","clearList","setIsEditting","deleteItem","editItem","className","map","item","key","id","title","type","onClick","Alert","msg","removeAlert","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","setList","isEditting","editID","setEditID","show","alert","setAlert","showAlert","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","newList","filter","currentItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb8aed0b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { FaEdit, FaTrash } from 'react-icons/fa'\r\nconst List = ({ list, setIsEditting, clearList, deleteItem, editItem }) => {\r\n  return (\r\n    <div className='grocery-list'>\r\n      {list.map((item) =>\r\n        <article className='grocery-item' key={item.id}>\r\n          <p className=\"title\">{item.title}</p>\r\n          <div className=\"btn-container\">\r\n            <button type='button' className='edit-btn' onClick={() => editItem(item.id)}> <FaEdit /></button>\r\n            <button type='button' className='delete-btn' onClick={() => deleteItem(item.id)}><FaTrash /></button>\r\n\r\n          </div>\r\n        </article>\r\n      )\r\n      }\r\n      <button className=\"clear-btn\" onClick={() => clearList()}>Clear Items</button>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React, { useEffect } from 'react'\r\n\r\nconst Alert = ({ type, msg, removeAlert, list }) => {\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      removeAlert();\r\n    }, 3000);\r\n    return () => clearTimeout(timeout)\r\n  }, [list])\r\n  return (\r\n    <p className={`alert alert-${type}`}>{msg}</p>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react'\r\nimport List from './List'\r\nimport Alert from './Alert'\r\n\r\nfunction App() {\r\n  const [name, setName] = useState('')\r\n  const [list, setList] = useState([]);\r\n  const [isEditting, setIsEditting] = useState(false);\r\n  const [editID, setEditID] = useState(null);\r\n  const [alert, setAlert] = useState({ show: false, msg: '', type: '' });\r\n\r\n  const deleteItem = (id) => {\r\n    const newList = list.filter((item) => item.id !== id);\r\n    setList(newList);\r\n  }\r\n\r\n  const editItem = (id) => {\r\n    const currentItem = list.find((item) => item.id === id);\r\n    setIsEditting(true);\r\n    setEditID(id)\r\n    setName(currentItem.title)\r\n  }\r\n\r\n  const showAlert = (show = false, msg = '', type = '') => {\r\n    setAlert({ show, msg, type })\r\n  }\r\n\r\n  const clearList = () => {\r\n    showAlert(true, 'List has been cleared', 'danger')\r\n    setList([]);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      showAlert(true, 'empty value', 'danger');\r\n    }\r\n    else if (name && isEditting) {\r\n      // editting\r\n      showAlert(true, 'Item updated', 'success')\r\n      setList(\r\n        list.map((item) => {\r\n          if (item.id === editID) {\r\n            return { ...item, title: name }\r\n          }\r\n          return item\r\n        })\r\n      )\r\n      setIsEditting(false);\r\n      setName('')\r\n      setEditID(null)\r\n    }\r\n    else {\r\n      showAlert(true, 'Item added', 'success');\r\n      const newItem = { id: new Date().getTime().toString(), title: name }\r\n      setList([...list, newItem])\r\n      setName('');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"section-center\">\r\n      <form onSubmit={handleSubmit} className=\"grocery-form\">\r\n        {alert.show && <Alert {...alert} removeAlert={showAlert} list={list} />}\r\n\r\n        <h3>Grocery List</h3>\r\n        <div className=\"form-control\">\r\n          <input type=\"text\" className='grocery' placeholder='e.g. Eggs' value={name} onChange={(e) => setName(e.target.value)} />\r\n          <button type=\"submit\" className='submit-btn' >{isEditting ? 'edit' : 'submit'}</button>\r\n        </div>\r\n      </form>\r\n      <div className=\"grocery-container\">\r\n        {list.length > 0 ? <List list={list} setIsEditting={setIsEditting} clearList={clearList} deleteItem={deleteItem} editItem={editItem} /> : null}\r\n      </div>\r\n    </section >\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}